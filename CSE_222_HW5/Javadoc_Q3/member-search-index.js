memberSearchIndex = [{"p":"<Unnamed>","c":"BinarySearchTree","l":"add(BinaryTree.Node<E>, E)","url":"add(BinaryTree.Node,E)"},{"p":"<Unnamed>","c":"AgeSearchTree","l":"add(E)"},{"p":"<Unnamed>","c":"BinarySearchTree","l":"add(E)"},{"p":"<Unnamed>","c":"SearchTree","l":"add(E)"},{"p":"<Unnamed>","c":"BinarySearchTree","l":"addReturn"},{"p":"<Unnamed>","c":"AgeData","l":"age"},{"p":"<Unnamed>","c":"AgeData","l":"AgeData(int)","url":"%3Cinit%3E(int)"},{"p":"<Unnamed>","c":"AgeSearchTree","l":"AgeSearchTree()","url":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"Main","l":"ageTree"},{"p":"<Unnamed>","c":"BinarySearchTree","l":"BinarySearchTree()","url":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"BinaryTree","l":"BinaryTree()","url":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"BinaryTree","l":"BinaryTree(BinaryTree.Node<E>)","url":"%3Cinit%3E(BinaryTree.Node)"},{"p":"<Unnamed>","c":"BinaryTree","l":"BinaryTree(E, BinaryTree<E>, BinaryTree<E>)","url":"%3Cinit%3E(E,BinaryTree,BinaryTree)"},{"p":"<Unnamed>","c":"AgeData","l":"compareTo(AgeData)"},{"p":"<Unnamed>","c":"Main","l":"construct()"},{"p":"<Unnamed>","c":"BinarySearchTree","l":"contains(E)"},{"p":"<Unnamed>","c":"SearchTree","l":"contains(E)"},{"p":"<Unnamed>","c":"BinaryTree.Node","l":"data"},{"p":"<Unnamed>","c":"BinarySearchTree","l":"delete(BinaryTree.Node<E>, E)","url":"delete(BinaryTree.Node,E)"},{"p":"<Unnamed>","c":"BinarySearchTree","l":"delete(E)"},{"p":"<Unnamed>","c":"SearchTree","l":"delete(E)"},{"p":"<Unnamed>","c":"BinarySearchTree","l":"deleteReturn"},{"p":"<Unnamed>","c":"BinarySearchTree","l":"find(BinaryTree.Node<E>, E)","url":"find(BinaryTree.Node,E)"},{"p":"<Unnamed>","c":"AgeSearchTree","l":"find(E)"},{"p":"<Unnamed>","c":"BinarySearchTree","l":"find(E)"},{"p":"<Unnamed>","c":"SearchTree","l":"find(E)"},{"p":"<Unnamed>","c":"BinarySearchTree","l":"findLargestChild(BinaryTree.Node<E>)","url":"findLargestChild(BinaryTree.Node)"},{"p":"<Unnamed>","c":"AgeData","l":"getAge()"},{"p":"<Unnamed>","c":"BinaryTree","l":"getData()"},{"p":"<Unnamed>","c":"BinaryTree","l":"getLeftSubtree()"},{"p":"<Unnamed>","c":"AgeData","l":"getNumberOfPeople()"},{"p":"<Unnamed>","c":"BinaryTree","l":"getRightSubtree()"},{"p":"<Unnamed>","c":"BinaryTree.Node","l":"isLeaf()"},{"p":"<Unnamed>","c":"AgeSearchTree","l":"isNull(BinaryTree.Node<E>)","url":"isNull(BinaryTree.Node)"},{"p":"<Unnamed>","c":"BinaryTree.Node","l":"left"},{"p":"<Unnamed>","c":"Main","l":"Main()","url":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"Main","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"<Unnamed>","c":"BinaryTree.Node","l":"Node(E)","url":"%3Cinit%3E(E)"},{"p":"<Unnamed>","c":"AgeData","l":"numberOfPeople"},{"p":"<Unnamed>","c":"AgeSearchTree","l":"olderThan(BinaryTree.Node<E>, int)","url":"olderThan(BinaryTree.Node,int)"},{"p":"<Unnamed>","c":"AgeSearchTree","l":"olderThan(int)"},{"p":"<Unnamed>","c":"BinaryTree","l":"preOrderTraverse()"},{"p":"<Unnamed>","c":"BinaryTree","l":"preOrderTraverse(BinaryTree.Node<E>, int, StringBuilder)","url":"preOrderTraverse(BinaryTree.Node,int,java.lang.StringBuilder)"},{"p":"<Unnamed>","c":"BinaryTree","l":"readObject(String)","url":"readObject(java.lang.String)"},{"p":"<Unnamed>","c":"AgeSearchTree","l":"remove(E)"},{"p":"<Unnamed>","c":"BinarySearchTree","l":"remove(E)"},{"p":"<Unnamed>","c":"SearchTree","l":"remove(E)"},{"p":"<Unnamed>","c":"BinaryTree.Node","l":"right"},{"p":"<Unnamed>","c":"BinaryTree","l":"root"},{"p":"<Unnamed>","c":"AgeData","l":"setAge(int)"},{"p":"<Unnamed>","c":"AgeData","l":"setNumberOfPeople(int)"},{"p":"<Unnamed>","c":"Main","l":"test1()"},{"p":"<Unnamed>","c":"Main","l":"test10()"},{"p":"<Unnamed>","c":"Main","l":"test11()"},{"p":"<Unnamed>","c":"Main","l":"test2()"},{"p":"<Unnamed>","c":"Main","l":"test3()"},{"p":"<Unnamed>","c":"Main","l":"test4()"},{"p":"<Unnamed>","c":"Main","l":"test5()"},{"p":"<Unnamed>","c":"Main","l":"test6()"},{"p":"<Unnamed>","c":"Main","l":"test7()"},{"p":"<Unnamed>","c":"Main","l":"test8()"},{"p":"<Unnamed>","c":"Main","l":"test9()"},{"p":"<Unnamed>","c":"AgeData","l":"toString()"},{"p":"<Unnamed>","c":"AgeSearchTree","l":"toString()"},{"p":"<Unnamed>","c":"BinaryTree","l":"toString()"},{"p":"<Unnamed>","c":"BinaryTree.Node","l":"toString()"},{"p":"<Unnamed>","c":"BinaryTree","l":"toString(BinaryTree.Node<E>, int, StringBuilder)","url":"toString(BinaryTree.Node,int,java.lang.StringBuilder)"},{"p":"<Unnamed>","c":"BinaryTree","l":"writeObject(String)","url":"writeObject(java.lang.String)"},{"p":"<Unnamed>","c":"AgeSearchTree","l":"youngerThan(BinaryTree.Node<E>, int)","url":"youngerThan(BinaryTree.Node,int)"},{"p":"<Unnamed>","c":"AgeSearchTree","l":"youngerThan(int)"}]